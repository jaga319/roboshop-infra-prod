pipeline {
  agent {
    node {
        label 'AGENT-1'
    }
  } 
  options{
        timeout(time: 1,unit:'HOURS')
        disableConcurrentBuilds()
        ansiColor('xterm')


    }
        parameters {
                       choice(name: 'ACTION', choices: ['APPLY', 'DESTROY'], description: 'Pick something')
        }
    // Build //
    stages {
        stage('init') {
            steps {
                sh """
                    cd 01-vpc
                    terraform init -reconfigure
                """
            }
        }
        stage('plan') {
            steps {
                sh """
                  cd 01-vpc
                  terraform plan
                """
            }
        }
        stage('Deploy') {
            when { 
                expression { "${params.ACTION}" == 'APPLY' }
            }   
            input {
                message "Should we continue?"
                ok "Yes, we should."
                // submitter "alice,bob"
                // parameters {
                //     string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')
                // }
            }
            steps {
                sh """
                     cd 01-vpc
                     terraform apply -auto-approve
                """
            }
        }
        stage('Destroy') {
            when { 
                expression { "${params.ACTION}" == 'DESTROY' }
            }   
            input {
                message "Should we continue?"
                ok "Yes, we should."
                // submitter "alice,bob"
                // parameters {
                //     string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')
                // }
            }
            steps {
                sh """
                     cd 01-vpc
                     terraform destroy -auto-approve
                """
            }
        }

       
    }
    // post build 
     post { 
        always { 

            echo 'I will always run'
        }
        failure{
            echo 'job is failed , creating an alarm'
        }
        success{
            echo 'job completed successfully'
        }
    }
}
